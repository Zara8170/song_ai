name: song_ai

services:
  api:
    image: ${AI_DOCKER_IMAGE_NAME}:latest
    env_file: .env
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000
    restart: unless-stopped

  worker:
    image: ${AI_DOCKER_IMAGE_NAME}:latest
    env_file: .env
    environment:
      - CELERY_BROKER_URL=${REDIS_URL}
      - CELERY_RESULT_BACKEND=${REDIS_URL}
    depends_on:
      redis:
        condition: service_healthy
    command: python -m celery -A workers.celery_app.celery worker -E -l INFO
    restart: unless-stopped

  flower:
    image: ${AI_DOCKER_IMAGE_NAME}:latest
    env_file: .env
    environment:
      - CELERY_BROKER_URL=${REDIS_URL}
      - CELERY_RESULT_BACKEND=${REDIS_URL}
      - FLOWER_BASIC_AUTH=${FLOWER_BASIC_AUTH}
    depends_on:
      worker:
        condition: service_started
    ports:
      - "5555:5555"
    command: >
      sh -c 'celery -A workers.celery_app.celery flower
      --address=0.0.0.0 --port=5555
      ${FLOWER_BASIC_AUTH:+--basic-auth=${FLOWER_BASIC_AUTH}}'
    restart: unless-stopped

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    command:
      - redis-server
      - --requirepass
      - ${REDIS_PASSWORD}
      - --appendonly
      - "yes"
      - --appendfsync
      - everysec
      - --save
      - "900"
      - "1"
      - --save
      - "300"
      - "10"
      - --save
      - "60"
      - "10000"
      - --dir
      - /data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  redisinsight:
    image: redis/redisinsight:latest
    container_name: redisinsight
    ports:
      - "5540:5540"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - RI_ACCEPT_TERMS_AND_CONDITIONS=yes
      - RI_APP_PORT=5540
      - RI_REDIS_HOST=${REDIS_HOST}
      - RI_REDIS_PORT=${REDIS_PORT}
      - RI_REDIS_PASSWORD=${REDIS_PASSWORD}
      - RI_REDIS_ALIAS=songs_ai
      - RI_REDIS_DB=0
    volumes:
      - redisinsight-data:/db
    restart: unless-stopped

volumes:
  redis-data:
  redisinsight-data:
